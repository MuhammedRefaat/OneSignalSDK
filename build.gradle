group 'com.onesignal.flutter'
version '2.6.3'

buildscript {
    repositories {
        google()
        mavenCentral()
        // huawei maven
        maven { url 'https://developer.huawei.com/repo/' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
        classpath 'com.huawei.agconnect:agcp:1.6.0.300'
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
        // huawei maven
        maven { url 'https://developer.huawei.com/repo/' }
        // Jitpack maven
        maven { url 'https://jitpack.io' }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    lintOptions {
        disable 'InvalidPackage'
    }
}

dependencies {
    // api project('https://github.com/MuhammedRefaat/Android-OneSignal-3.16.0.git')
    //implementation 'com.github.jitpack:gradle-simple:master-SNAPSHOT'
    // My OneSignal library implementation
    api 'com.github.MuhammedRefaat:Android-OneSignal-3.16.0:2.0.0'
    //api project(':AndroidOneSignal')
    // Huawei PushKit
    // KEEP as "compileOnly", so OneSignal isn't a direct dependency in the POM file.
    compileOnly 'com.huawei.hms:push:6.1.0.300'
    compileOnly 'com.huawei.hms:location:6.2.0.300'
}

// Adds required manifestPlaceholders keys to allow mainifest merge gradle step to complete
// The OneSignal app id should be set in your JS code.
// Google project number / FCM Sender ID will be pulled in from the OneSignal dashbaord
class DefaultManifestPlaceHolders {
    static final MANIFEST_PLACEHOLDERS_DEFAULTS = [
        onesignal_app_id: '${onesignal_app_id}',
        onesignal_google_project_number: '${onesignal_google_project_number}'
    ]

    static void addManifestToAppProject(Project proj) {
        def androidApp = proj.android
        MANIFEST_PLACEHOLDERS_DEFAULTS.each { defKey, defValue ->
            if (!androidApp.defaultConfig.manifestPlaceholders.containsKey(defKey)) {
                androidApp.defaultConfig.manifestPlaceholders[defKey] = defValue

                androidApp.buildTypes.each { buildType ->
                    if (!buildType.manifestPlaceholders.containsKey(defKey))
                        buildType.manifestPlaceholders[defKey] = defValue
                }
            }
        }
    }
}

rootProject.childProjects.each { projName, proj ->
    if (projName != 'app' && projName != 'onesignal_flutter')
        return

    if (proj.hasProperty('android')) {
        DefaultManifestPlaceHolders.addManifestToAppProject(proj)
        return
    }

    proj.afterEvaluate {
        DefaultManifestPlaceHolders.addManifestToAppProject(proj)
    }
}
